% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/big_pls_cox.R.R
\name{big_pls_cox}
\alias{big_pls_cox}
\title{Partial Least Squares Components for Cox Models with Big Matrices}
\usage{
big_pls_cox(X, time, status, ncomp = 2L, control = survival::coxph.control())
}
\arguments{
\item{X}{A numeric matrix or a \code{\link[bigmemory:big.matrix]{bigmemory::big.matrix}} object containing the predictors.}

\item{time}{Numeric vector of survival times.}

\item{status}{Integer (0/1) vector of event indicators.}

\item{ncomp}{Number of latent components to compute.}

\item{control}{Optional list passed to \code{\link[survival:coxph.control]{survival::coxph.control}}.}
}
\value{
A list with the computed scores, loadings, weights, scaling information and the
fitted Cox model returned by \code{\link[survival:agreg.fit]{survival::coxph.fit}}.
}
\description{
Compute Partial Least Squares (PLS) components tailored for
Cox proportional hazards models when predictors are stored as a
\code{big.matrix} from the \pkg{bigmemory} package.
}
\details{
The function standardises each predictor column, iteratively
builds latent scores using martingale residuals from Cox fits, and deflates
the predictors without materialising the full design matrix in memory.
Both in-memory and file-backed \pkg{bigmemory} matrices are supported.
}
\examples{
if (requireNamespace("survival", quietly = TRUE)) {
  set.seed(1)
  X <- matrix(rnorm(100), nrow = 20)
  time <- rexp(20)
  status <- rbinom(20, 1, 0.5)
  fit <- big_pls_cox(X, time, status, ncomp = 2)
  str(fit)
}

}
