// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// big_pls_cox_col_stats_cpp
List big_pls_cox_col_stats_cpp(SEXP xpMat);
RcppExport SEXP _bigPLS_big_pls_cox_col_stats_cpp(SEXP xpMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpMat(xpMatSEXP);
    rcpp_result_gen = Rcpp::wrap(big_pls_cox_col_stats_cpp(xpMat));
    return rcpp_result_gen;
END_RCPP
}
// big_pls_cox_component_cpp
List big_pls_cox_component_cpp(SEXP xpMat, NumericVector residuals, NumericMatrix scores_prev, NumericMatrix loadings_prev, NumericVector means, NumericVector sds);
RcppExport SEXP _bigPLS_big_pls_cox_component_cpp(SEXP xpMatSEXP, SEXP residualsSEXP, SEXP scores_prevSEXP, SEXP loadings_prevSEXP, SEXP meansSEXP, SEXP sdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpMat(xpMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type residuals(residualsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type scores_prev(scores_prevSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type loadings_prev(loadings_prevSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type means(meansSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sds(sdsSEXP);
    rcpp_result_gen = Rcpp::wrap(big_pls_cox_component_cpp(xpMat, residuals, scores_prev, loadings_prev, means, sds));
    return rcpp_result_gen;
END_RCPP
}
// big_pls_cox_gd_cpp
Rcpp::List big_pls_cox_gd_cpp(SEXP X_ptr, Rcpp::NumericVector time, Rcpp::NumericVector status, int ncomp, int max_iter, double tol, double learning_rate);
RcppExport SEXP _bigPLS_big_pls_cox_gd_cpp(SEXP X_ptrSEXP, SEXP timeSEXP, SEXP statusSEXP, SEXP ncompSEXP, SEXP max_iterSEXP, SEXP tolSEXP, SEXP learning_rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type X_ptr(X_ptrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type status(statusSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type learning_rate(learning_rateSEXP);
    rcpp_result_gen = Rcpp::wrap(big_pls_cox_gd_cpp(X_ptr, time, status, ncomp, max_iter, tol, learning_rate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bigPLS_big_pls_cox_col_stats_cpp", (DL_FUNC) &_bigPLS_big_pls_cox_col_stats_cpp, 1},
    {"_bigPLS_big_pls_cox_component_cpp", (DL_FUNC) &_bigPLS_big_pls_cox_component_cpp, 6},
    {"_bigPLS_big_pls_cox_gd_cpp", (DL_FUNC) &_bigPLS_big_pls_cox_gd_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_bigPLS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
